#include<stdio.h>
#include<vector>
#include<string.h>
#include<algorithm>

using namespace std;

int n, e;
struct Edge{
	int src,dst,cost;
};

vector<Edge> edges;
	
int parent[10005];
	
int getParent(int curr){
	if(parent[curr] != curr)
		return parent[curr] = getParent(parent[curr]);
	return parent[curr];
}

bool compare(Edge a, Edge b)
{ 
    return a.cost > b.cost; 
}
		
int main(){
	
	int input;
	
	scanf("%d",&input);
	
	for(int i=0;i<input;i++){
	
		scanf("%d %d",&n,&e);
		
		edges.clear();
		
		for(int i=0;i<e;i++){
			int a,b,c;
			scanf("%d %d %d",&a,&b,&c);
			
			Edge e;
			e.src = a;
			e.dst = b;
			e.cost = c;
			
			edges.push_back(e);
		}
		
		sort(edges.begin(), edges.end(),compare);
		
		for(int i=1;i<=n;i++){
			parent[i] = i;
		}

		int mst = 0;
		int total = 0;
	 	
		for(int i=0;i<e;i++){
			total += edges[i].cost;
			if(getParent(edges[i].src) != getParent(edges[i].dst)){
				parent[getParent(edges[i].src)] = getParent(edges[i].dst);
				mst += edges[i].cost;
			}	
		}
		
		printf("%d\n",total-mst);
	}
	
	int zero;
	
	scanf("%d",&zero);
	
	return 0;
}
